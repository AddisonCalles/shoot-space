{"version":3,"file":"streetzero.cjs.development.js","sources":["../src/drawable.class.ts","../src/eventListener.class.ts","../src/helpers/math.ts","../src/helpers/color.ts","../src/game.class.ts","../src/health.class.ts","../src/vector.class.ts","../src/kinematic.class.ts","../src/layerPath.class.ts","../src/point.class.ts"],"sourcesContent":["import { LayerPath } from \"./layerPath.class\";\r\n\r\nexport class Drawable {\r\n    private _ctx: any;\r\n    private _offset = { x: 0, y: 0 };\r\n    private _canvas: any;\r\n    private _layers: LayerPath[] = [];\r\n    private _x: number;\r\n    private _y: number;\r\n    private _width: number;\r\n    private _height: number;\r\n    private _rotation: number = 0;\r\n    private _debug: boolean = false;\r\n    constructor(_canvas: any, _x: number, _y: number, _width: number = 0, _height: number = 0) {\r\n        this._width = _width;\r\n        this._height = _height;\r\n        this._x = _x;\r\n        this._y = _y;\r\n        this._ctx = _canvas.getContext('2d');\r\n        this._canvas = _canvas;\r\n    }\r\n    setLeyers(layers: LayerPath[]) {\r\n        this._layers = layers;\r\n    }\r\n    move(x: number, y: number) {\r\n        this._x += x;\r\n        this._y += y;\r\n    }\r\n    rotate(angle: number) {\r\n        this._rotation = this._rotation + angle;\r\n    }\r\n    setPos(x: number, y: number) {\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n\r\n    setCanvas(canvas: any) {\r\n        this._canvas = canvas;\r\n        this._ctx = this._canvas.getContext('2d');\r\n    }\r\n    centerOffset() {\r\n        this._offset = { x: this.width / 2, y: this.height / 2 };\r\n    }\r\n    render() {\r\n        this._layers.forEach((layer) => {\r\n            layer.render();\r\n        });\r\n        if (this._debug) {\r\n            this.context.fillStyle = 'orange';\r\n            this.context.font = \"10px Arial\";\r\n            this.context.fillText(`(${this.x.toFixed()},${this.y.toFixed(0)})`, this.x - 10, this.y - 10);\r\n            this.context.strokeStyle = 'gray';\r\n            this.context.strokeRect(this.x, this.y, this.width, this.height);\r\n            this.context.beginPath();\r\n            this.context.arc(this.x, this.y, 4, 0, Math.PI * 2);\r\n            this.context.fill();\r\n        }\r\n    }\r\n    public enableDebug(){\r\n        this._debug = true;\r\n    }\r\n    public get context(): any { return this._ctx; }\r\n    get canvas() { return this._canvas; }\r\n    get x() { return this._x + this._offset.x; }\r\n    get y() { return this._y + this._offset.y; }\r\n    get x2() { return this.x + this._width; }\r\n    get y2() { return this.y + this._height; }\r\n    get rotation() { return this._rotation; }\r\n    get width() { return this._width; }\r\n    get height() { return this._height; }\r\n    get offset() { return this._offset; }\r\n    set offset(value) { this._offset = value; }\r\n    set rotation(value) { this._rotation = value; }\r\n\r\n}","export class EventListener{\r\n    _listeners: Function[] = [];\r\n    constructor(){\r\n    }\r\n    subscribe(listener: Function){\r\n        this._listeners.push(listener);\r\n    }\r\n    unsubscribe(listener:Function){\r\n        this._listeners = this._listeners.filter((inlist)=>inlist !== listener);\r\n    }\r\n    emit(params:any){\r\n        this._listeners.forEach((listener)=>listener(params));\r\n    }\r\n}","\r\n\r\nexport const random = (max:number, min:number) => Math.random() * (max - min) + min;\r\n\r\nexport const angleBetweenPoints = (p1:{x:number, y:number}, p2:{x:number, y:number}) => Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\r\n\r\nexport const vectorComponents = (direction:number, velocity:number) => {\r\n    const radians = direction * Math.PI / 180;\r\n    return { x: (velocity * Math.cos(radians)), y: (velocity * Math.sin(radians)) };\r\n}\r\n\r\nexport const vectorByXY = (vX:number, vY:number) => {\r\n    return {vel: Math.abs(((vX ** 2) + (vY ** 2)) ** 1 / 2), dir: Math.atan(vY / vX)}\r\n}\r\n","\r\nexport function rgba(color:string, transparency:number) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\r\n    return result ? `rgba(${parseInt(result[1], 16)},${parseInt(result[2], 16)},${parseInt(result[3], 16)}, ${transparency})` : '';\r\n  }\r\n  ","import { EventListener } from \"./eventListener.class\";\r\n\r\nexport class Game {\r\n    private _play = false;\r\n    private _level = 0;\r\n    private _context: any = {};\r\n    private _points = 0;\r\n    private _mainRunner: any;\r\n    private _canvas: any = {};\r\n    private _gameover = false;\r\n    private _playEvent = new EventListener();\r\n    private _preloadEvent = new EventListener();\r\n    private _gameOverEvent = new EventListener();\r\n    private _renderEvent = new EventListener();\r\n    private _nextLevelEvent = new EventListener();\r\n    private _fps = 1;\r\n    private _fpsCounter = 0;\r\n    private _time: number = 0;\r\n    private _initTime: number = 0;\r\n    private _lastTime: number = 0;\r\n    private _controls = {\r\n      fire: new EventListener(),\r\n      move: new EventListener(),\r\n      jump: new EventListener(),\r\n      \r\n    }\r\n    constructor(canvas?: HTMLCanvasElement) {\r\n      this._canvas = canvas;\r\n      this._context = canvas?.getContext('2d');\r\n      this._preloadEvent.emit(this);\r\n    }\r\n    render() {\r\n      if (!this._context) return;\r\n      this._renderEvent.emit(this);\r\n      if (this.isPlay) {\r\n  \r\n      }\r\n    }\r\n    _initMouseEvents() {\r\n      const gameRef = this;\r\n      this._canvas?.addEventListener('click', function (event: any) {\r\n          gameRef._controls.fire.emit({context: gameRef, event: event});\r\n      });\r\n      this._canvas?.addEventListener('mousemove', function (event: any) {\r\n          gameRef._controls.move.emit({context: gameRef, event: event});\r\n      });\r\n    }\r\n    clearCanvas() {\r\n      if (this._context && this._canvas) this._context?.clearRect(0, 0, this._canvas?.width, this._canvas?.height);\r\n    }\r\n    play() {\r\n      this._play = true;\r\n    }\r\n    nextLevel(sleepOffset = 0) {\r\n      this._level++;\r\n      setTimeout(() => {\r\n  \r\n      }, sleepOffset);\r\n    }\r\n  \r\n    start() {\r\n      this._initTime = new Date().getTime();\r\n      this._mainRunner = setInterval(() => {\r\n        this.clearCanvas();\r\n        this.render();\r\n        const now = new Date().getTime();\r\n        const milliSecondsDif = (now) - this._lastTime;\r\n        this._time = (+((now - this._initTime) / 1000).toFixed(0));\r\n  \r\n        if (milliSecondsDif >= 1000) {\r\n          this._lastTime = new Date().getTime();\r\n          this._fps = this._fpsCounter;\r\n          this._fpsCounter = 0;\r\n        }\r\n        this._fpsCounter++;\r\n      }, 1000 / 60)\r\n    }\r\n  \r\n    stop() {\r\n      clearInterval(this._mainRunner);\r\n    }\r\n  \r\n    incrementPoints(amount:number){\r\n      return this._points += amount;\r\n    }\r\n    get gameOverEvent() { return this._gameOverEvent; }\r\n    get nextLevelEvent() { return this._nextLevelEvent; }\r\n    get playEvent() { return this._playEvent; }\r\n    get gameOver() { return this._gameover; }\r\n    get points() { return this._points; }\r\n    get level() { return this._level; }\r\n    get isPlay() { return this._play; }\r\n    get time(){\r\n      return this._time;\r\n    }\r\n    get fps(){return this._fps;}\r\n  }","import { EventListener } from \"./eventListener.class\";\r\n\r\nexport class Health {\r\n    private _health: number;\r\n    private _total: number;\r\n    private _reduceEvent = new EventListener();\r\n    private _deadEvent = new EventListener();\r\n\r\n    constructor(total:number) {\r\n        this._total = total;\r\n        this._health = total;\r\n    }\r\n\r\n    reset() {\r\n        this._health = this._total;\r\n    }\r\n\r\n    reduce(reduce:number) {\r\n        const health = this._health - reduce;\r\n        if (health <= 0) {\r\n            this._health = 0;\r\n            this.deadEvent.emit(this);\r\n        } else {\r\n            this._health = health;\r\n        }\r\n    }\r\n\r\n    get current() { return this._health; }\r\n    get total() { return this._total; }\r\n    get reduceEvent() { return this._reduceEvent; }\r\n    get deadEvent() { return this._deadEvent; }\r\n    get isDead() { return this.current <= 0; }\r\n}","import { angleBetweenPoints, vectorByXY, vectorComponents } from './helpers/math';\r\nimport { Kinematic } from './kinematic.class';\r\n\r\nexport class Vector {\r\n    private _vel =0;\r\n    private _dir = 0;\r\n    private _velX = 0;\r\n    private _velY = 0;\r\n    private _element: Kinematic;\r\n    constructor(element: Kinematic) {\r\n        this._element = element;\r\n    }\r\n    setVel(velocity: number) {\r\n        this.setVector(velocity, this._dir);\r\n    }\r\n    setDir(_dir:number) {\r\n        this.setVector(this._vel, _dir);\r\n    }\r\n    rotate(grades:number) {\r\n        const sum = this._dir + grades;\r\n        this._dir = sum % 360;\r\n        this.setVector(this._vel, this._dir);\r\n    }\r\n    rotateTo(element:Kinematic){\r\n        const angleBetweenElements = angleBetweenPoints(this._element, element);\r\n        this.setDir(angleBetweenElements);\r\n    }\r\n    setVector(_vel:number, _dir:number) {\r\n        this._vel = Math.abs(_vel);\r\n        this._dir = _dir;\r\n        const components = vectorComponents(this._dir, this._vel);\r\n        this._velX = components.x;\r\n        this._velY = components.y;\r\n    }\r\n    setVelXY(velx:number, vely:number) {\r\n        this._velX = velx;\r\n        this._velY = vely;\r\n        const vector = vectorByXY(velx, vely);\r\n        this._vel = vector.vel;\r\n        this._dir = vector.dir;\r\n    }\r\n    get vel() { return { vel: this._vel, x: this._velX, y: this._velY }; }\r\n    get dir() { return this._dir }\r\n\r\n}","import { Drawable } from './drawable.class';\r\nimport { Vector } from './vector.class';\r\n\r\nexport class Kinematic extends Drawable {\r\n    private _destroy = false;\r\n    private _path: Path2D;\r\n    private _vector = new Vector(this);\r\n    private _enabledVectorRotation = true;\r\n    constructor(canvas: any, x: number, y: number, width: number = 0, height: number = 0) {\r\n        super(canvas, x, y, width, height)\r\n        this._path = new Path2D();\r\n        this._vector.setVector(0, 0);\r\n    }\r\n\r\n    edgeColision() {\r\n        if ((this.x <= 0) && this._vector.vel.x < 0) {\r\n            return 'right';\r\n        } else if (this.x2 >= this.canvas.width && this._vector.vel.x > 0) {\r\n            return 'left';\r\n        }\r\n        if ((this.y <= 0) && this._vector.vel.y < 0) {\r\n            return 'top';\r\n        } else if (this.y2 >= (this.canvas.height) && this._vector.vel.y > 0) {\r\n            return 'bottom';\r\n        }\r\n        return false;\r\n    }\r\n    hasColision(el: Kinematic) {\r\n        let xColision = false;\r\n        if (this.x <= el.x2 && el.x <= this.x2) {\r\n            xColision = true;\r\n        } else if (this.x2 >= el.x && this.x2 <= el.x2) {\r\n            xColision = true;\r\n        }\r\n        let yColision = false;\r\n        if (this.y <= el.y2 && el.y <= this.y2) {\r\n            yColision = true;\r\n        } else if (this.y2 >= el.y && this.y2 <= el.y2) {\r\n            yColision = true;\r\n        }\r\n        return (xColision && yColision);\r\n    }\r\n    move() {\r\n        super.move(this._vector.vel.x, this._vector.vel.y);\r\n    }\r\n    isDestroy() { return this._destroy; }\r\n    destroy() { this._destroy = true; }\r\n    get vector() { return this._vector; }\r\n    get path() { return this._path; }\r\n    set enabledVectorRotation(value) { this._enabledVectorRotation = value; }\r\n    get enabledVectorRotation() { return this._enabledVectorRotation; }\r\n}","import { Kinematic } from \"./kinematic.class\";\r\n\r\nexport class LayerPath {\r\n    private _color: string;\r\n    private _path: Path2D;\r\n    private _element: Kinematic;\r\n    private _originalPath: Path2D;\r\n    private _rotation = 0;\r\n\r\n    constructor(path: Path2D, color: string, element: Kinematic) {\r\n        this._color = color;\r\n        this._path = path;\r\n        this._originalPath = path;\r\n        this._element = element;\r\n    }\r\n\r\n    rotate(direction: number) {\r\n        const rotatePath = new Path2D();\r\n        rotatePath.addPath(this._originalPath, DOMMatrix.fromMatrix().translate(this._element.width / 2, this._element.height / 2).rotate(direction).translate(this._element.width / 2 * -1, this._element.height / 2 * -1));\r\n        this._path = new Path2D();\r\n        this.path.addPath(rotatePath, DOMMatrix.fromMatrix().translate(this._element.x, this._element.y));\r\n    }\r\n\r\n    render() {\r\n        const rotation = this.rotation + this._element.rotation + (this._element.enabledVectorRotation ? this._element.vector.dir : 0);\r\n        this.rotate(rotation);\r\n        this._element.context.fillStyle = this.color;\r\n        this._element.context.fill(this._path);\r\n    }\r\n\r\n    get rotation() { return this._rotation; }\r\n    set rotation(value) { this._rotation = value };\r\n    get color() { return this._color; }\r\n    get path() { return this._path; }\r\n\r\n}","export class Point {\r\n    public x: number;\r\n    public y: number;\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}"],"names":["Drawable","_canvas","_x","_y","_width","_height","x","y","_ctx","getContext","setLeyers","layers","_layers","move","rotate","angle","_rotation","setPos","setCanvas","canvas","centerOffset","_offset","width","height","render","forEach","layer","_debug","context","fillStyle","font","fillText","toFixed","strokeStyle","strokeRect","beginPath","arc","Math","PI","fill","enableDebug","value","EventListener","subscribe","listener","_listeners","push","unsubscribe","filter","inlist","emit","params","random","max","min","angleBetweenPoints","p1","p2","atan2","vectorComponents","direction","velocity","radians","cos","sin","vectorByXY","vX","vY","vel","abs","dir","atan","rgba","color","transparency","result","exec","parseInt","Game","fire","jump","_context","_preloadEvent","_renderEvent","_initMouseEvents","gameRef","addEventListener","event","_controls","clearCanvas","clearRect","play","_play","nextLevel","sleepOffset","_level","setTimeout","start","_initTime","Date","getTime","_mainRunner","setInterval","now","milliSecondsDif","_lastTime","_time","_fps","_fpsCounter","stop","clearInterval","incrementPoints","amount","_points","_gameOverEvent","_nextLevelEvent","_playEvent","_gameover","Health","total","_total","_health","reset","reduce","health","deadEvent","_reduceEvent","_deadEvent","current","Vector","element","_element","setVel","setVector","_dir","setDir","_vel","grades","sum","rotateTo","angleBetweenElements","components","_velX","_velY","setVelXY","velx","vely","vector","Kinematic","_path","Path2D","_vector","edgeColision","x2","y2","hasColision","el","xColision","yColision","isDestroy","_destroy","destroy","_enabledVectorRotation","LayerPath","path","_color","_originalPath","rotatePath","addPath","DOMMatrix","fromMatrix","translate","rotation","enabledVectorRotation","Point"],"mappings":"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"}